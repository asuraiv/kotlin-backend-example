buildscript {

    ext {
        kotlinVersion = '1.3.72'
        kotlinJpaPluginVersion = ''
        springBootVersion = '2.0.9.RELEASE'

        protoVersion= '3.4.0'
        protobufGradlePluginVersion = "0.8.5"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")

        classpath("com.google.protobuf:protobuf-gradle-plugin:${protobufGradlePluginVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.asuraiv.kotlinbackend'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'

    // TODO: 추후 데이터 베이스 연동 필요시 주석 해제
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'

    implementation 'mysql:mysql-connector-java:8.0.14'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}


test {
    useJUnitPlatform()
}
